@mixin font($alias, $name)
	@font-face
		font-family: $alias
		src: url("../fonts/" + $name + ".eot")
		src: url("../fonts/" + $name + ".eot?#iefix") format("embedded-opentype"), url("../fonts/" + $name + ".woff") format("woff"), url("../fonts/" + $name + ".ttf") format("truetype")
		font-weight: normal
		font-style: normal

@mixin font-smoothing
	-webkit-font-smoothing: antialiased
	-moz-osx-font-smoothing: grayscale

@mixin hide-text
	text-indent: -9999px
	overflow: hidden

@mixin clr
	&:after
		content: ""
		display: table
		clear: both

@mixin unselect
	-webkit-user-select: none
	-moz-user-select: none
	-ms-user-select: none
	user-select: none

@mixin text-overflow
	overflow: hidden
	-ms-text-overflow: ellipsis
	text-overflow: ellipsis
	white-space: nowrap

@mixin justify
	text-align: justify
	font-size: 0
	&:after
		content: ""
		display: inline-block
		width: 100%
		height: 0

@mixin vertical
	text-align: center
	font-size: 0
	&:before
		content: ""
		display: inline-block
		vertical-align: middle
		width: 0
		height: 100%

@mixin g($color1, $color2)
	@include background-image(linear-gradient($color1, $color2))

@mixin gh($color1, $color2)
	@include background-image(linear-gradient(left, $color1, $color2))

// e.g.: +arr(500,50, #000, l)
@mixin arrow($width, $height, $bg, $direction)
	width: 0px
	height: 0px
	border-style: solid
	@if $direction == t
		border-width: 0 $width / 2 + px $height + px $width / 2 + px
		border-color: transparent transparent $bg transparent
	@if $direction == r
		border-width: $height / 2 + px 0 $height / 2 + px $width + px
		border-color: transparent transparent transparent $bg
	@if $direction == b
		border-width: $height + px $width / 2 + px 0 $width / 2 + px
		border-color: $bg transparent transparent transparent
	@if $direction == l
		border-width: $height / 2 + px $width + px $height / 2 + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == tl
		border-width: $height + px $width + px 0 0
		border-color: $bg transparent transparent transparent
	@if $direction == tr
		border-width: 0 $width + px $height + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == br
		border-width: 0 0 $height + px $width + px
		border-color: transparent transparent $bg transparent
	@if $direction == bl
		border-width: $width + px 0 0 $height + px
		border-color: transparent transparent transparent $bg

// to make smooth edges
@mixin arrow-smoothting
	transform: rotate(0.05deg)

@mixin placeholder
	&:-ms-input-placeholder
		@content
	&::-moz-placeholder
		opacity: 1
		@content
	&::-webkit-input-placeholder
		@content
	&::placeholder
		@content

@mixin retina
	@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)
		@content

@mixin r($media)
	@media (max-width: $media + "px")
		@content


// -------------------------
// Sprites
// -------------------------

$icons: sprite-map("icons/*.png", $spacing: 10px)
// $icons2x: sprite-map("icons2x/*.png", $spacing: 10px)

@mixin image-size($path)
	width: image-width($path)
	height: image-height($path)

@mixin icon($sprite, $map: $icons)
	background: sprite($map, $sprite) no-repeat
	//background-image: inline-image('icons/'+$sprite+'.png','image/png')
	@include image-size(sprite-file($map, $sprite))

@mixin icon-rt($sprite)
	// display: block
	// overflow: hidden
	background-image: sprite-url($icons)
	background-position: sprite-position($icons, $sprite)
	background-repeat: no-repeat
	height: image-height(sprite-file($icons, $sprite))
	width: image-width(sprite-file($icons, $sprite))
	@media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min-moz-device-pixel-ratio: 1.3), only screen and (min-resolution: 200dpi)
		background-image: sprite-url($icons2x)
		background-size: image-width(sprite-path($icons2x)) / 2 image-height(sprite-path($icons2x)) / 2
		background-position: round(nth(sprite-position($icons2x, $sprite), 1) / 2) round(nth(sprite-position($icons2x, $sprite), 2) / 2)
		height: image-height(sprite-file($icons2x, $sprite)) / 2
		width: image-width(sprite-file($icons2x, $sprite)) / 2

@mixin svgi($name, $width, $height)

@mixin svg($name, $width, $height)
	background-image: inline-image("svg/" + $name + ".svg")
	background-repeat: no-repeat
